#version: '3'
services:
  app:
    image: hiyoon/gamja_be-app:${VERSION}  # Docker Hub 이미지로 빌드
    ports:
      - "8000:8000"
    command: >
      sh -c "python api/manage.py migrate &&
             gunicorn config.wsgi:application --bind 0.0.0.0:8000 --workers 3 --timeout 120"
    environment:
      - DB_HOST=${RDS_HOSTNAME}
      - DB_NAME=${RDS_DB_NAME}
      - DB_USER=${RDS_USERNAME}
      - DB_PASSWORD=${RDS_PASSWORD}
      - PYTHONPATH=/app/api
    env_file:
      - .env.dev
      - .env.prod
    networks:
      - app_network

  daphne:
    image: hiyoon/gamja_be-daphne:${VERSION}  # Daphne 컨테이너 이미지
    ports:
      - "8001:8001"
    command: daphne -b 0.0.0.0 -p 8001 api.config.asgi:application
    environment:
      - PYTHONPATH=/app/api
    env_file:
      - .env.dev
      - .env.prod
    networks:
      - app_network

  redis:
    image: redis:7.0  # Redis 컨테이너
    ports:
      - "6379:6379"
    command: redis-server --requirepass ${REDIS_PASSWORD}
    environment:
      - REDIS_MAXMEMORY=100mb
      - REDIS_MAXMEMORY_POLICY=allkeys-lru
    volumes:
      - redis_data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app_network

  celery:
    image: hiyoon/gamja_be-celery:${VERSION}  # Celery 컨테이너
    command: celery -A config worker -l info
    environment:
      - DB_HOST=${RDS_HOSTNAME}
      - DB_NAME=${RDS_DB_NAME}
      - DB_USER=${RDS_USERNAME}
      - DB_PASSWORD=${RDS_PASSWORD}
      - PYTHONPATH=/app/api
      - DJANGO_SETTINGS_MODULE=api.config.settings
    env_file:
      - .env.dev
      - .env.prod
    depends_on:
      - redis
    networks:
      - app_network

  celery-beat:
    image: hiyoon/gamja_be-celery-beat:${VERSION}  # Celery Beat 컨테이너
    command: celery -A config beat -l info
    environment:
      - DB_HOST=${RDS_HOSTNAME}
      - DB_NAME=${RDS_DB_NAME}
      - DB_USER=${RDS_USERNAME}
      - DB_PASSWORD=${RDS_PASSWORD}
      - PYTHONPATH=/app/api
      - DJANGO_SETTINGS_MODULE=api.config.settings
    env_file:
      - .env.dev
      - .env.prod
    depends_on:
      - redis
    networks:
      - app_network

  nginx:
    image: nginx:latest  # Nginx 컨테이너
    ports:
      - "80:80"  # HTTP 포트
      - "443:443" #HTTPS 포트
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - ./static:/app/static
      - ./media:/app/media
    depends_on:
      - app
      - daphne
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  redis_data: